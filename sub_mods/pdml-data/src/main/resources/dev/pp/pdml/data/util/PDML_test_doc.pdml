[PDML_test_doc
    [Core_PDML
        [Data
            [server_config
                [name Office Server]
                [address
                    [ip 192.168.1.1]
                    [port 8080]
                ]
            ]
        ]
        [Markup You can write text in [b bold], [i italic], and [b [i bold and italic]]]
        [Empty_Node]
        [Escape_Chars \[ \] \\ \^ \n \r\n \t end]
        [Text_Nodes
            [simple_text Lorem Ipsum tralala]
            [complex_text Line 1
Line (2)
Line \[3\]
Long line <4> sdfghdfgj dsfg kdfkj gdf kgjdskjfg kjdsf kjg kdjf gkdfskj gkdskjg kdjf kg dkfkjgsd kjkj dkj kdfg djkf jgdjfkgjk dj end of line 4
HTML tags: <div></div> <script></script>\r\n
HTML entities: &lt; &gt;
tab\ttab\ttab]
            [no_text]
            [whitespace_text_1

    ]
            [whitespace_text_2    \n   \r\n\t\t\t]
            [node\swith\svery\slong\sname\sand\sescaped\schars\s\[\]\\\^and\slines\nline_2\r\nline_3\nend_of_long_node_name
                text
            ]
        ]
    ]

    [Extensions

        [Comments
            ^// single-line comment

            ^/*
                Multi
                Line
                Comment
            */

            ^/* nested ^/* comment */ */

            ^/** comment containing */ **/
        ]

        [Attributes
            [only_attributes ^(
                color="light green"
                width = 200
                height = "")]

            [attributes_and_text ^(a1=v1 a2=v2) text]

            [long_attributes ^(
                attribute\swith\svery\slong\sname\sand\sescaped\schars\s\[\]\\\^and\slines\nline_2\r\nline_3\nend_of_long_attribute_name = "value"
                PDML_code = """
                    [root
                        [child text]
                    ]
                    """)
            ]
        ]

        ["Unicode Escapes"
            [smiley \u{1F600}]
            ["some math symbols" \u{221A 221E 222B}]
            ["Unicode escapes used in attributes" ^("\u{1F44D} or \u{1F44E}" = \u{1F44D}) text]
        ]

        ["String Literals"
            ["text with many square brackets" ^"[[[]]]"]

            [~|regex|~ ^~|[\r\n]*\\|~]

            [html_code ^"""
                <div>
                    <p>[Hello]</p>
                </div>
                """
            ]

            ["""
                Node name with 3 lines
                Line 2
                Line 3
                """ ^"""
                Text with 3 lines
                Line 2
                Line 3
                """
            ]

        ]

        ["Utility Nodes"
            ^[set number=42]
            [Number ^[get number]]
        ]

        ["Java Scripting Nodes"

            [insert_text 1 + 1 = ^s[itext 1 + 1]]

            [insert_text Current date: ^s[itext java.time.LocalDate.now()]]

            [insert_text ^s[itext "\"[nl]\""]]

            [insert_code ^s[icode "\"[nl]\""]]

            [script
                ^s[script
                    """
                    StringBuilder sb = new StringBuilder();
                    // for ( int u = 0x0041; u <= 0x0050; u++ ) {
                    for ( int u = 0x1F600; u <= 0x1F605; u++ ) {
                        sb.appendCodePoint ( u );
                    }
                    ctx.doc().insertText ( sb.toString() );
                    """
                ]
            ]

            ["definition (Java class)"
                ^s[def
                    """
                    package test;

                    import java.util.List;

                    public class MarkupUtils {

                        public static String simpleList ( String... elements ) {

                            StringBuilder sb = new StringBuilder();
                            sb.append ( "[list " );
                            for ( String element : elements ) {
                                sb.append ( "[el " )
                                  .append ( element )
                                  .append ( "]" );
                            }
                            sb.append ( "]" );
                            return sb.toString();
                        }

                        public static String redOnYellow ( String text ) {
                            return "[p ^(html_style=\"color:red; background-color:yellow;\") " + text + "]";
                        }
                    }
                    """
                ]

                [p List of fruits: ^s[icode test.MarkupUtils.simpleList (
                    "apple",
                    "orange",
                    "banana" )]]

                ^s[icode test.MarkupUtils.redOnYellow ( "Warning!" )]
            ]
        ]
    ]
]
